package eu.city4age.dashboard.api.pojo.domain;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonView;

import eu.city4age.dashboard.api.pojo.json.view.View;


/**
 * NumericIndicatorValue generated by hbm2java
 */
@Entity
@Table(name = "numeric_indicator_value")
@SequenceGenerator(name = "default_gen", sequenceName = "numeric_indicator_value_seq", allocationSize = 1)
public class NumericIndicatorValue extends AbstractBaseEntity<Long> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2422155784673783252L;

	@JsonView(View.NUIView.class)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nui_type_id", insertable = false, updatable = false)
	private DetectionVariable detectionVariable;
	
	@Column(name = "nui_type_id")
	private int detectionVariableId;

	@JsonView(View.NUIView.class)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "time_interval_id", referencedColumnName = "id")
	private TimeInterval timeInterval;

	@JsonView(View.NUIView.class)
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_in_role_id", insertable = false, updatable = false)
	private UserInRole userInRole;
	
	@Column(name = "user_in_role_id")
	private Integer userInRoleId;
	
	@JsonView(View.NUIView.class)
	@Column(name = "nui_value", precision = 20, scale = 8)
	private Double nuiValue;

	@Column(name = "data_source_type", length = 1000)
	private String dataSourceType;
	// private Set interActivityBehaviourVariations = new HashSet(0);

	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	@OneToMany(mappedBy = "numericIndicatorValue", fetch = FetchType.LAZY)
	private Set<InterActivityBehaviourVariation> interActivityBehaviourVariations = new HashSet<InterActivityBehaviourVariation>(0);

	public NumericIndicatorValue() {
	}

	public NumericIndicatorValue(String dataSourceType, DetectionVariable detectionVariable,
			TimeInterval timeInterval, Double nuiValue) {

		this.dataSourceType = dataSourceType;
		this.detectionVariable = detectionVariable;
		this.timeInterval = timeInterval;
		this.nuiValue = nuiValue;
	}

	public NumericIndicatorValue(DetectionVariable detectionVariable, String dataSourceType,
			TimeInterval timeInterval, UserInRole userInRole, Double nuiValue, 
			Set<InterActivityBehaviourVariation> interActivityBehaviourVariations) {

		this.dataSourceType = dataSourceType;
		this.detectionVariable = detectionVariable;
		this.timeInterval = timeInterval;
		this.userInRole = userInRole;
		this.nuiValue = nuiValue;
		this.interActivityBehaviourVariations = interActivityBehaviourVariations;
	}

	public DetectionVariable getDetectionVariable() {
		return detectionVariable;
	}

	public void setDetectionVariable(DetectionVariable detectionVariable) {
		this.detectionVariable = detectionVariable;
	}

	public int getDetectionVariableId() {
		return detectionVariableId;
	}

	public void setDetectionVariableId(int detectionVariableId) {
		this.detectionVariableId = detectionVariableId;
	}

	public TimeInterval getTimeInterval() {
		return this.timeInterval;
	}

	public void setTimeInterval(TimeInterval timeInterval) {
		this.timeInterval = timeInterval;
	}

	public UserInRole getUserInRole() {
		return this.userInRole;
	}

	public void setUserInRole(UserInRole userInRole) {
		this.userInRole = userInRole;
	}

	public Integer getUserInRoleId() {
		return userInRoleId;
	}

	public void setUserInRoleId(Integer userInRoleId) {
		this.userInRoleId = userInRoleId;
	}

	public Double getNuiValue() {
		return this.nuiValue;
	}

	public void setNuiValue(Double nuiValue) {
		this.nuiValue = nuiValue;
	}

	public String getDataSourceType() {
		return this.dataSourceType;
	}

	public void setDataSourceType(String dataSourceType) {
		this.dataSourceType = dataSourceType;
	}

	public Set<InterActivityBehaviourVariation> getInterActivityBehaviourVariations() {
		return this.interActivityBehaviourVariations;
	}	

	public void setInterActivityBehaviourVariations(Set<InterActivityBehaviourVariation> interActivityBehaviourVariations) {
		this.interActivityBehaviourVariations = interActivityBehaviourVariations;
	}
	
	@Override
	public int hashCode() {
		return id.intValue();
	}

	@Override
	public boolean equals(Object obj) {
		
		if (obj != null && obj instanceof NumericIndicatorValue) {
			NumericIndicatorValue nui = (NumericIndicatorValue) obj;
			if (nui.getId().equals(this.id)) return true;
			else return false;
		}
		return false;
	}

}
