NativeQuery.computeAllNuis = WITH subq1 AS (																			                 	  \
										SELECT                                                                                                \
											uir.id AS user_in_role_id,                                                                        \
											uir.pilot_code AS pilot_code,                                                                     \
											vm.measure_type_id AS measure_type_id,                                                            \
											AVG (vm.measure_value) AVG,                                                                       \
											COALESCE (                                                                                        \
												STDDEV_SAMP (vm.measure_value),                                                               \
												0                                                                                             \
											) stDev,                                                                                          \
											PERCENTILE_CONT (0.25) WITHIN GROUP (                                                             \
												ORDER BY                                                                                      \
													vm.measure_value DESC                                                                     \
											) best25                                                                                          \
										FROM                                                                                                  \
											variation_measure_value AS vm                                                                     \
										INNER JOIN time_interval AS ti                                                                        \
										ON ti.id = vm.time_interval_id                                                                        \
										INNER JOIN user_in_role AS uir                                                                        \
										ON uir.id = vm.user_in_role_id                                                                        \
										WHERE                                                                                                 \
											ti.interval_start >= :startOfMonth                                                                \
										AND ti.interval_start <= :endOfMonth																  \
										AND uir.pilot_code = :pilotCode                                                                       \
										GROUP BY                                                                                              \
											uir.id,                                                                                           \
											vm.measure_type_id                                                                                \
									), subq2 AS (                                                                                             \
										SELECT                                                                                                \
											detection_variable_id,                                                                            \
											derived_detection_variable_id,                                                                    \
											pilot_code,                                                                                       \
											derivation_function_formula                                                                       \
										FROM                                                                                                  \
											md_pilot_detection_variable																		  \
										WHERE																								  \
											pilot_code = :pilotCode                                                                           \
									) SELECT                                                                                                  \
										user_in_role_id AS uir_id,                                                                            \
										subq2.derived_detection_variable_id AS ddv_id,                                                        \
										(                                                                                                     \
											CASE                                                                                              \
											WHEN AVG = 0 THEN                                                                                 \
												0                                                                                             \
											WHEN subq2.derivation_function_formula LIKE '%avg%' THEN AVG                                      \
											WHEN subq2.derivation_function_formula LIKE '%std%' THEN stDev / AVG                              \
											WHEN subq2.derivation_function_formula LIKE '%best%' THEN best25 / AVG                            \
											WHEN subq2.derivation_function_formula LIKE '%delta%' THEN (best25 - AVG) / AVG                   \
											END                                                                                               \
										) nui_value                                                                                           \
									FROM                                                                                                      \
										subq1,                                                                                                \
										subq2                                                                                                 \
									WHERE                                                                                                     \
										subq1.pilot_code = subq2.pilot_code                                                                   \
									AND subq1.measure_type_id = subq2.detection_variable_id                                                   \
									AND subq2.derivation_function_formula != ''  	   													      \
									ORDER BY                                                                                                  \
										subq1.user_in_role_id,                                                                                \
										subq2.derived_detection_variable_id

NativeQuery.computeAllGess = WITH mainq AS (                                                                                                  \
										WITH main_subq AS (                                                                                   \
												SELECT                                                                                        \
													vwdv.user_in_role_id,                                                                     \
													vwdv.pilot_code,                                                                          \
													vwdv.detection_variable_id,                                                               \
													vwdv.detection_variable_type,                                                             \
													vwdv.derived_detection_variable_id,                                                       \
													vwdv.derivation_weight,                                                                   \
													vwdv.detection_variable_default_period,                                                   \
													vwmn.derived_nui_id,                                                                      \
													vwdv2.derivation_weight AS w2                                                             \
												FROM                                                                                          \
													vw_detection_variable_derivation_per_user_in_role AS vwdv                                 \
												LEFT JOIN vw_mea_nui_derivation_per_pilots AS vwmn                                            \
													ON vwdv.detection_variable_default_period IN ('day', '1wk')                               \
													AND vwdv.pilot_code = vwmn.pilot_code                                                     \
													AND vwdv.detection_variable_id = vwmn.mea_id                                              \
												INNER JOIN vw_detection_variable_derivation_per_user_in_role AS vwdv2                         \
													ON vwdv2.detection_variable_id = vwdv.derived_detection_variable_id                       \
													AND vwdv.user_in_role_id = vwdv2.user_in_role_id                                          \
												WHERE                                                                                         \
													vwdv.detection_variable_type = 'mea'                                                      \
												AND vwdv.pilot_code = :pilotCode                                                              \
												AND vwdv.derived_detection_variable_id IN (                                                   \
													SELECT vwd.detection_variable_id                                                          \
													FROM vw_detection_variable_derivation_per_user_in_role AS vwd                             \
													WHERE vwd.detection_variable_type = 'ges')                                                \
											), nui_subq AS (                                                                                  \
												SELECT                                                                                        \
													nui.user_in_role_id,                                                                      \
													nui.nui_type_id,                                                                          \
													nui.nui_value,                                                                            \
													nui2.nui_value AS nui_zero_value                                                          \
												FROM                                                                                          \
													numeric_indicator_value AS nui                                                            \
												INNER JOIN time_interval AS ti                                                                \
													ON nui.time_interval_id = ti. ID                                                          \
												INNER JOIN numeric_indicator_value AS nui2                                                    \
													ON nui.user_in_role_id = nui2.user_in_role_id                                             \
													AND nui.nui_type_id = nui2.nui_type_id                                                    \
												INNER JOIN user_in_role AS uir                                                                \
													ON uir.id = nui.user_in_role_id                                                           \
												WHERE                                                                                         \
													ti.interval_start >= :startOfMonth                                                        \
													AND ti.interval_start <= :endOfMonth                                                      \
													AND uir.pilot_code = :pilotCode                                                           \
													AND nui2.id = (                                                                           \
														SELECT MIN (nui1.id)                                                                  \
														FROM numeric_indicator_value AS nui1                                                  \
														WHERE nui1.user_in_role_id = nui2.user_in_role_id                                     \
														AND nui1.nui_type_id = nui2.nui_type_id)                                              \
											), mm_subq AS (                                                                                   \
												SELECT                                                                                        \
													vmv.id,                                                                                   \
													vmv.user_in_role_id,                                                                      \
													vmv.measure_type_id,                                                                      \
													pdv.derived_detection_variable_id,                                                        \
													(                                                                                         \
														CASE 																				  \
														WHEN dv.derived_detection_variable_id IS NOT NULL THEN vmv.measure_value			  \
														WHEN vmv2.measure_value = 0 THEN 3                                                    \
														WHEN (                                                                                \
															vmv.measure_value - vmv2.measure_value                                            \
														) / vmv2.measure_value >.25 THEN 5                                                    \
														WHEN (                                                                                \
															vmv.measure_value - vmv2.measure_value                                            \
														) / vmv2.measure_value >.1 THEN 4                                                     \
														WHEN (                                                                                \
															vmv.measure_value - vmv2.measure_value                                            \
														) / vmv2.measure_value >-.1 THEN 3                                                    \
														WHEN (                                                                                \
															vmv.measure_value - vmv2.measure_value                                            \
														) / vmv2.measure_value >-.25 THEN 2 ELSE 1                                            \
														END                                                                                   \
													) mm_value                                                                                \
												FROM                                                                                          \
													variation_measure_value AS vmv                                                            \
												INNER JOIN variation_measure_value AS vmv2 ON vmv.user_in_role_id = vmv2.user_in_role_id      \
													AND vmv.measure_type_id = vmv2.measure_type_id                                            \
												INNER JOIN user_in_role AS uir                                                                \
													ON uir. ID = vmv.user_in_role_id                                                          \
												INNER JOIN cd_detection_variable AS dv                                                        \
													ON vmv.measure_type_id = dv. ID                                                           \
												INNER JOIN time_interval AS ti                                                                \
													ON vmv.time_interval_id = ti. ID                                                          \
												INNER JOIN md_pilot_detection_variable AS pdv                                                 \
													ON pdv.pilot_code = uir.pilot_code                                                        \
													AND pdv.detection_variable_id = vmv.measure_type_id                                       \
												WHERE                                                                                         \
													ti.interval_start >= :startOfMonth                                                        \
												AND ti.interval_start <= :endOfMonth                                                          \
												AND uir.pilot_code = :pilotCode                                                               \
												AND dv.default_typical_period = 'mon'                                                         \
												AND vmv2. ID = (                                                                              \
													SELECT                                                                                    \
														MIN (vmv1. ID)                                                                        \
													FROM                                                                                      \
														variation_measure_value AS vmv1                                                       \
													WHERE                                                                                     \
														vmv1.user_in_role_id = vmv2.user_in_role_id                                           \
													AND vmv1.measure_type_id = vmv2.measure_type_id                                           \
												)                                                                                             \
											) SELECT                                                                                          \
												main_subq.detection_variable_default_period,                                                  \
												main_subq.user_in_role_id,                                                                    \
												main_subq.derived_detection_variable_id,                                                      \
												main_subq.derivation_weight AS w1,                                                            \
												main_subq.w2,                                                                                 \
												mm_subq.mm_value,                                                                             \
												(                                                                                             \
													CASE                                                                                      \
													WHEN main_subq.detection_variable_default_period = 'mon' THEN                             \
														mm_subq.mm_value                                                                      \
													ELSE                                                                                      \
														AVG (                                                                                 \
															CASE                                                                              \
															WHEN nui_subq.nui_zero_value = 0 THEN 3                                           \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                       \
																main_subq.derivation_weight) / nui_subq.nui_zero_value >.25 THEN 5            \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                       \
																main_subq.derivation_weight) / nui_subq.nui_zero_value >.1 THEN 4             \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                       \
																main_subq.derivation_weight) / nui_subq.nui_zero_value > -.1 THEN 3           \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                       \
																main_subq.derivation_weight) / nui_subq.nui_zero_value > -.25 THEN 2          \
															WHEN nui_subq.nui_value IS NOT NULL THEN 1                                        \
															END                                                                               \
														)                                                                                     \
													END                                                                                       \
												) derived_mea_value                                                                           \
											FROM                                                                                              \
												main_subq                                                                                     \
											LEFT JOIN nui_subq                                                                                \
												ON nui_subq.nui_type_id = main_subq.derived_nui_id                                            \
												AND nui_subq.user_in_role_id = main_subq.user_in_role_id                                      \
											LEFT JOIN mm_subq                                                                                 \
												ON main_subq.detection_variable_default_period = 'mon'                                        \
												AND main_subq.user_in_role_id = mm_subq.user_in_role_id                                       \
												AND main_subq.derived_detection_variable_id = mm_subq.derived_detection_variable_id           \
												AND main_subq.detection_variable_id = mm_subq.measure_type_id                                 \
											WHERE                                                                                             \
												mm_subq.mm_value IS NOT NULL                                                                  \
												OR nui_subq.nui_value IS NOT NULL                                                             \
											GROUP BY                                                                                          \
												main_subq.user_in_role_id,                                                                    \
												main_subq.derived_detection_variable_id,                                                      \
												main_subq.derivation_weight,                                                                  \
												nui_subq.nui_zero_value,                                                                      \
												nui_subq.nui_value,                                                                           \
												main_subq.derived_nui_id,                                                                     \
												main_subq.w2,                                                                                 \
												main_subq.detection_variable_default_period,                                                  \
												mm_subq.mm_value                                                                              \
										) SELECT                                                                                              \
											mainq.user_in_role_id AS uir_id,                                                                  \
											mainq.derived_detection_variable_id AS ddv_id,                                                    \
											(SUM(mainq.derived_mea_value*ABS(mainq.w1))/SUM(ABS(mainq.w1))) AS ges_value,                     \
											mainq.w2 AS weight                                                                                \
										FROM                                                                                                  \
											mainq                                                                                             \
										GROUP BY                                                                                              \
											mainq.user_in_role_id,                                                                            \
											mainq.derived_detection_variable_id,                                                              \
											mainq.w2                                                                                          \
										ORDER BY                                                                                              \
											mainq.user_in_role_id ASC

NativeQuery.computeAllGfvs = WITH subq1 AS (                                                                                                  \
														SELECT                                                                                \
															user_in_role_id AS uir_id,                                                        \
															derived_detection_variable_id AS ddv_id,                                          \
															SUM (derivation_weight) AS sum_weight,                                            \
															SUM (                                                                             \
																gef_value * derivation_weight                                                 \
															) AS sum_ges_value_weight                                                         \
														FROM                                                                                  \
															vw_gef_values_persisted_source_ges_types                                          \
														WHERE                                                                                 \
															interval_start >= :startOfMonth                                                   \
														AND interval_start <= :endOfMonth                                                     \
														AND pilot_code = :pilotCode                                                           \
														AND typical_period = 'mon'                                                            \
														AND derived_detection_variable_type = lower(:detectionVariableType)                   \
														GROUP BY                                                                              \
															(                                                                                 \
																user_in_role_id,                                                              \
																derived_detection_variable_id                                                 \
															)                                                                                 \
														ORDER BY                                                                              \
															(user_in_role_id)                                                                 \
													), subq2 AS (                                                                             \
														SELECT                                                                                \
															user_in_role_id AS uir_id,                                                        \
															derivation_weight,                                                                \
															detection_variable_id AS dv_id                                                    \
														FROM                                                                                  \
															vw_gef_values_persisted_source_ges_types                                          \
														WHERE                                                                                 \
															interval_start >= :startOfMonth                                                   \
														AND interval_start <= :endOfMonth                                                     \
														AND pilot_code = :pilotCode                                                           \
														AND typical_period = 'mon'                                                            \
														AND detection_variable_type = lower(:detectionVariableType)                           \
													) SELECT                                                                                  \
														subq1.uir_id,                                                                         \                                                                   \
														subq1.ddv_id,                                                                         \
														subq1.sum_ges_value_weight / subq1.sum_weight AS ges_value,                           \
														subq2.derivation_weight AS weight                                                     \
													FROM                                                                                      \
														subq1                                                                                 \
													LEFT JOIN subq2                                                                           \
														ON subq1.uir_id = subq2.uir_id                                                        \
														AND subq1.ddv_id = subq2.dv_id                                                        \
														ORDER BY                                                                              \
														subq1.uir_id,                                                                         \
														subq1.ddv_id

NativeQuery.getLast5AssessmentsForDiagramTimeline = SELECT																			          \
														ti. ID AS time_interval_id,                                                           \
														ti.interval_start,                                                                    \
														gfv. ID AS gef_id,                                                                    \
														gfv.gef_value,                                                                        \
														aa. ID AS assessment_id,                                                              \
														aa.assessment_comment,                                                                \
														aa.risk_status AS risk_status,                                                        \
														aa.data_validity_status,                                                              \
														aa.created AS created,                                                                \
														uis.display_name                                                                      \
													FROM                                                                                      \
														time_interval AS ti                                                                   \
													INNER JOIN (                                                                              \
														geriatric_factor_value AS gfv                                                         \
														INNER JOIN (                                                                          \
															assessed_gef_value_set AS agvs                                                    \
															INNER JOIN assessment AS aa                                                       \
															ON agvs.assessment_id = aa. ID                                                    \
														) ON agvs.gef_value_id = gfv. ID                                                      \
													) ON gfv.time_interval_id = ti. ID                                                        \
													LEFT OUTER JOIN user_in_role AS uir                                                       \
													ON uir. ID = gfv.user_in_role_id                                                          \
													LEFT OUTER JOIN user_in_system AS uis                                                     \
													ON uis. ID = uir.user_in_system_id                                                        \
													WHERE                                                                                     \
														ti.interval_start >= :intervalStart                                                   \
													AND (                                                                                     \
														ti.interval_end <= :intervalEnd                                                       \
														OR ti.typical_period = 'mon'                                                          \
													)                                                                                         \
													AND (                                                                                     \
														aa. ID IN (                                                                           \
															SELECT                                                                            \
																ID                                                                            \
															FROM                                                                              \
																(                                                                             \
																	SELECT                                                                    \
																		a1. ID,                                                               \
																		a1.created                                                            \
																	FROM                                                                      \
																		assessment a1                                                         \
																	INNER JOIN assessed_gef_value_set AS agvs1                                \
																	ON agvs1.assessment_id = a1. ID                                           \
																	WHERE                                                                     \
																		agvs1.gef_value_id = agvs.gef_value_id                                \
																	ORDER BY                                                                  \
																		a1.created DESC FETCH FIRST 5 ROWS ONLY                               \
																) T                                                                           \
														)                                                                                     \
														OR aa. ID IS NULL                                                                     \
													)                                                                                         \
													AND (                                                                                     \
														gfv.user_in_role_id = :userInRoleId                                                   \
														OR gfv. ID IS NULL                                                                    \
													)                                                                                         \
													AND (                                                                                     \
														gfv.gef_type_id IN (                                                                  \
															SELECT                                                                            \
																dv1. ID                                                                       \
															FROM                                                                              \
																cd_detection_variable AS dv1                                                  \
															JOIN md_pilot_detection_variable AS pdv1                                          \
															ON dv1. ID = pdv1.detection_variable_id                                           \
															WHERE                                                                             \
																pdv1.derived_detection_variable_id = :parentDetectionVariableId               \
															AND pdv1.pilot_code = uir.pilot_code                                              \
														)                                                                                     \
														OR gfv. ID IS NULL                                                                    \
													)                                                                                         \
													ORDER BY                                                                                  \
														ti. ID
NativeQuery.getJointGefValues =  WITH q1 AS 							   				   \
													 (                                     \
													  SELECT                               \
													   gfv.gef_value ,                     \
													   gfv.time_interval_id                \
													  FROM                                 \
													   geriatric_factor_value gfv          \
													  WHERE                                \
													   gfv.user_in_role_id = :userInRoleId \
													   AND gef_type_id     = :factorId     \
													  UNION                                \
													  SELECT                               \
													   gi.gef_value ,                      \
													   gi.time_interval_id                 \
													  FROM                                 \
													   gef_interpolation as gi             \
													  WHERE                                \
													   gi.user_in_role_id = :userInRoleId  \
													   AND gef_type_id    = :factorId      \
													 )                                     \
													SELECT                                 \
													 q1.gef_value ,                        \
													 ti.interval_start                     \
													FROM                                   \
													 q1                                    \
													 JOIN                                  \
													  time_interval as ti                  \
													  ON                                   \
													   (                                   \
													    q1.time_interval_id = ti.id        \
													   )                                   \
													ORDER by                               \
													 interval_start
NativeQuery.computeDerivedMeasures = WITH mainq AS (																								\
											WITH main_subq AS ( 																					\
												SELECT                                                                                              \
													vwdv.user_in_role_id,                                                                           \
													vwdv.pilot_code,                                                                                \
													vwdv.detection_variable_id,                                                                     \
													vwdv.detection_variable_type,                                                                   \
													vwdv.derived_detection_variable_id,                                                             \
													vwdv.derivation_weight,                                                                         \
													vwdv.detection_variable_default_period,                                                         \
													vwmn.derived_nui_id,                                                                            \
													vwdv2.derivation_weight AS w2                                                                   \
												FROM                                                                                                \
													vw_detection_variable_derivation_per_user_in_role AS vwdv                                       \
												LEFT JOIN vw_mea_nui_derivation_per_pilots AS vwmn                                                  \
													ON vwdv.detection_variable_default_period IN ('day', '1wk')                                     \
													AND vwdv.pilot_code = vwmn.pilot_code                                                           \
													AND vwdv.detection_variable_id = vwmn.mea_id                                                    \
												INNER JOIN vw_detection_variable_derivation_per_user_in_role AS vwdv2                               \
													ON vwdv2.detection_variable_id = vwdv.derived_detection_variable_id                             \
													AND vwdv.user_in_role_id = vwdv2.user_in_role_id                                                \
												WHERE                                                                                               \
													vwdv.detection_variable_type = 'mea'                                                            \
												AND vwdv.user_in_role_id = :userInRoleId                                                            \
												AND vwdv.derived_detection_variable_id = :parentFactorId                                            \
												AND vwdv.derived_detection_variable_id IN (                                                         \
													SELECT vwd.detection_variable_id                                                                \
													FROM vw_detection_variable_derivation_per_user_in_role AS vwd                                   \
													WHERE vwd.detection_variable_type = 'ges')                                                      \
												ORDER BY                                                                                            \
													vwdv.user_in_role_id DESC,                                                                      \
													vwdv.detection_variable_id                                                                      \
											), nui_subq AS (                                                                                        \
												SELECT                                                                                              \
													nui.user_in_role_id,                                                                            \
													nui.nui_type_id,                                                                                \
													nui.nui_value,                                                                                  \
													nui2.nui_value AS nui_zero_value,                                                               \
													nui.time_interval_id AS time_interval_id                                                        \
												FROM                                                                                                \
													numeric_indicator_value AS nui                                                                  \
												INNER JOIN time_interval AS ti                                                                      \
													ON nui.time_interval_id = ti. ID                                                                \
												INNER JOIN numeric_indicator_value AS nui2                                                          \
													ON nui.user_in_role_id = nui2.user_in_role_id                                                   \
													AND nui.nui_type_id = nui2.nui_type_id                                                          \
												INNER JOIN user_in_role AS uir                                                                      \
													ON uir.id = nui.user_in_role_id                                                                 \
												INNER JOIN vw_detection_variable_derivation_per_user_in_role AS vwdv                                \
													ON vwdv.detection_variable_id = nui.nui_type_id                                                 \
												WHERE                                                                                               \
													uir."id" = :userInRoleId                                                                        \
													AND vwdv.derived_detection_variable_id = :parentFactorId                                        \
													AND nui2.id = (                                                                                 \
														SELECT MIN (nui1.id)                                                                        \
														FROM numeric_indicator_value AS nui1                                                        \
														WHERE nui1.user_in_role_id = nui2.user_in_role_id                                           \
														AND nui1.nui_type_id = nui2.nui_type_id)                                                    \
											), mm_subq AS (                                                                                         \
												SELECT                                                                                              \
													vmv.id,                                                                                         \
													vmv.user_in_role_id,                                                                            \
													vmv.measure_type_id,                                                                            \
													pdv.derived_detection_variable_id,                                                              \
													vmv.time_interval_id AS time_interval_id,                                                       \
													(                                                                                               \
														CASE                                                                                        \
														WHEN dv.derived_detection_variable_id IS NOT NULL THEN vmv.measure_value	                \
														WHEN vmv2.measure_value = 0 THEN 3                                                          \
														WHEN (                                                                                      \
															vmv.measure_value - vmv2.measure_value                                                  \
														) / vmv2.measure_value >.25 THEN 5                                                          \
														WHEN (                                                                                      \
															vmv.measure_value - vmv2.measure_value                                                  \
														) / vmv2.measure_value >.1 THEN 4                                                           \
														WHEN (                                                                                      \
															vmv.measure_value - vmv2.measure_value                                                  \
														) / vmv2.measure_value >-.1 THEN 3                                                          \
														WHEN (                                                                                      \
															vmv.measure_value - vmv2.measure_value                                                  \
														) / vmv2.measure_value >-.25 THEN 2 ELSE 1                                                  \
														END                                                                                         \
													) mm_value                                                                                      \
												FROM                                                                                                \
													variation_measure_value AS vmv                                                                  \
												INNER JOIN variation_measure_value AS vmv2 ON vmv.user_in_role_id = vmv2.user_in_role_id            \
													AND vmv.measure_type_id = vmv2.measure_type_id                                                  \
												INNER JOIN user_in_role AS uir                                                                      \
													ON uir. ID = vmv.user_in_role_id                                                                \
												INNER JOIN cd_detection_variable AS dv                                                              \
													ON vmv.measure_type_id = dv. ID                                                                 \
												INNER JOIN time_interval AS ti                                                                      \
													ON vmv.time_interval_id = ti. ID                                                                \
												INNER JOIN md_pilot_detection_variable AS pdv                                                       \
													ON pdv.pilot_code = uir.pilot_code                                                              \
													AND pdv.detection_variable_id = vmv.measure_type_id                                             \
												WHERE                                                                                               \
													uir."id" = :userInRoleId                                                                        \
												AND pdv.derived_detection_variable_id = :parentFactorId                                             \
												AND dv.default_typical_period = 'mon'                                                               \
												AND vmv2. ID = (                                                                                    \
													SELECT                                                                                          \
														MIN (vmv1. ID)                                                                              \
													FROM                                                                                            \
														variation_measure_value AS vmv1                                                             \
													WHERE                                                                                           \
														vmv1.user_in_role_id = vmv2.user_in_role_id                                                 \
													AND vmv1.measure_type_id = vmv2.measure_type_id                                                 \
												)                                                                                                   \
											) SELECT                                                                                                \
												main_subq.user_in_role_id,                                                                          \
												main_subq.detection_variable_id,                                                                    \
												main_subq.derived_detection_variable_id,                                                            \
												main_subq.detection_variable_default_period,                                                        \
												(                                                                                                   \
												CASE                                                                                                \
												WHEN nui_subq.time_interval_id IS NOT NULL THEN                                                     \
													nui_subq.time_interval_id                                                                       \
												ELSE mm_subq.time_interval_id                                                                       \
												END                                                                                                 \
												) AS time_interval_id,                                                                              \
												(                                                                                                   \
													CASE                                                                                            \
													WHEN main_subq.detection_variable_default_period = 'mon' THEN                                   \
														mm_subq.mm_value                                                                            \
													ELSE                                                                                            \
														AVG (                                                                                       \
															CASE                                                                                    \
															WHEN nui_subq.nui_zero_value = 0 THEN 3                                                 \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                             \
																main_subq.derivation_weight) / nui_subq.nui_zero_value >.25 THEN 5                  \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                             \
																main_subq.derivation_weight) / nui_subq.nui_zero_value >.1 THEN 4                   \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                             \
																main_subq.derivation_weight) / nui_subq.nui_zero_value > -.1 THEN 3                 \
															WHEN (nui_subq.nui_value - nui_subq.nui_zero_value) * sign(                             \
																main_subq.derivation_weight) / nui_subq.nui_zero_value > -.25 THEN 2                \
															WHEN nui_subq.nui_value IS NOT NULL THEN 1                                              \
															END                                                                                     \
														)                                                                                           \
													END                                                                                             \
												) derived_mea_value,                                                                                \
											(	CASE WHEN main_subq.detection_variable_default_period IN ('day', '1wk') THEN                        \
												(SELECT vwdv.derivation_weight FROM vw_detection_variable_derivation_per_user_in_role AS vwdv       \
													WHERE vwdv.user_in_role_id = main_subq.user_in_role_id                                          \
														AND vwdv.detection_variable_id = main_subq.detection_variable_id                            \
														AND vwdv.derived_detection_variable_id = nui_subq.nui_type_id                               \
														AND vwdv.detection_variable_type = 'mea'                                                    \
														AND vwdv.derived_detection_variable_type = 'nui'                                            \
												)                                                                                                   \
												ELSE 1                                                                                              \
												END                                                                                                 \
											) mea_nui_derivation_weight                                                                             \
											FROM                                                                                                    \
												main_subq                                                                                           \
											LEFT JOIN nui_subq                                                                                      \
												ON nui_subq.nui_type_id = main_subq.derived_nui_id                                                  \
												AND nui_subq.user_in_role_id = main_subq.user_in_role_id                                            \
											LEFT JOIN mm_subq                                                                                       \
												ON main_subq.detection_variable_default_period = 'mon'                                              \
												AND main_subq.user_in_role_id = mm_subq.user_in_role_id                                             \
												AND main_subq.derived_detection_variable_id = mm_subq.derived_detection_variable_id                 \
												AND main_subq.detection_variable_id = mm_subq.measure_type_id                                       \
											WHERE                                                                                                   \
												mm_subq.mm_value IS NOT NULL                                                                        \
												OR nui_subq.nui_value IS NOT NULL                                                                   \
											GROUP BY                                                                                                \
												main_subq.user_in_role_id,                                                                          \
												main_subq.detection_variable_id,                                                                    \
												main_subq.derived_detection_variable_id,                                                            \
												main_subq.detection_variable_default_period,                                                        \
												nui_subq.time_interval_id,                                                                          \
												mm_subq.time_interval_id,                                                                           \
												mm_subq.mm_value,                                                                                   \
												nui_subq.nui_type_id                                                                                \
										) SELECT                                                                                                    \
												mainq.user_in_role_id,                                                                              \
												mainq.detection_variable_id,                                                                        \
												mainq.derived_detection_variable_id,                                                                \
												mainq.detection_variable_default_period,                                                            \
												mainq.time_interval_id,                                                                             \
												(SUM(mainq.derived_mea_value * mainq.mea_nui_derivation_weight)) AS derived_mea_value               \
											FROM                                                                                                    \
												mainq                                                                                               \
											INNER JOIN time_interval AS ti ON ti."id" = mainq.time_interval_id                                      \
											GROUP BY                                                                                                \
												mainq.user_in_role_id,                                                                              \
												mainq.detection_variable_id,                                                                        \
												mainq.derived_detection_variable_id,                                                                \
												mainq.detection_variable_default_period,                                                            \
												mainq.time_interval_id,                                                                             \
												ti.interval_start                                                                                   \
											ORDER BY                                                                                                \
												ti.interval_start,                                                                                  \
												mainq.detection_variable_id,                                                                        \
												mainq.time_interval_id